{"version":3,"sources":["reportWebVitals.js","utils.js","Search.js","Pokedex.styles.js","PokemonCard.js","Pokedex.js","Pokemon.js","themes.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","utils","toFirstCharUpperCase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","searchContainer","display","backgroundColor","fade","palette","common","white","paddingLeft","paddingRight","marginTop","marginBottom","searchIcon","alignSelf","searchInput","width","margin","inputTextColor","color","Search","props","classes","className","TextField","InputProps","input","onChange","handleSearchChange","label","variant","pokedexContainer","paddingTop","maxWidth","toolbarContainer","loadingContainer","minHeight","cardMedia","cardContent","textAlign","appBarStyle","type","background","paper","primary","spacing","darkModeIcon","loaderColor","cardStyle","text","PokemonCard","Grid","item","xs","sm","CardActionArea","Card","onClick","history","push","id","CardMedia","image","sprite","style","height","CardContent","Typography","Pokedex","pokedexStyles","useState","undefined","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","response","results","data","newPokemonData","forEach","pokemon","index","AppBar","position","Toolbar","container","justify","alignItems","e","target","value","IconButton","aria-label","themeModeHandler","Object","keys","map","pokemonId","includes","getPokemonCard","alignContent","direction","CircularProgress","styles","paddingBottom","Pokemon","match","params","setPokemon","catch","error","species","weight","types","sprites","fullImageUrl","front_default","component","alt","title","gutterBottom","List","root","ListItem","ListItemText","Link","href","url","rel","typeInfo","inset","CardActions","Button","generatePokemonJSX","themes","darkTheme","createMuiTheme","overrides","MuiFormLabel","MuiInput","underline","borderBottom","lightTheme","App","darkMode","setDarkMode","principalPaper","minWidth","padding","basename","ThemeProvider","Paper","square","exact","path","render","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddb99db6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const toFirstCharUpperCase = name => {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n}\r\n\r\nconst utils={\r\n    toFirstCharUpperCase\r\n}\r\n\r\nexport default utils","import React from 'react';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { TextField } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchContainer: {\r\n        display: 'flex',\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        paddingLeft: \"20px\",\r\n        paddingRight: \"20px\",\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    searchIcon: {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    searchInput: {\r\n        width: \"200px\",\r\n        margin: \"5px\",\r\n    },\r\n    inputTextColor: {\r\n        color: 'rgba(255, 255, 255, 0.7)'\r\n    }\r\n}));\r\n\r\nconst Search = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.searchContainer}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n            <TextField \r\n                InputProps={{\r\n                    classes: {\r\n                        input: classes.inputTextColor\r\n                    }\r\n                }}\r\n                className={classes.searchInput} \r\n                onChange={props.handleSearchChange} \r\n                label=\"Pokemon\" \r\n                variant=\"standard\" \r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default Search;","import { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pokedexContainer: {\r\n        paddingTop: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px',\r\n        maxWidth: '100%',\r\n        margin: '0'\r\n    },\r\n    toolbarContainer: {\r\n        paddingLeft: '26px',\r\n        paddingRight: '26px',\r\n        maxWidth: '100%',\r\n        margin: '0'\r\n    },\r\n    loadingContainer: {\r\n        minHeight: '83vh'\r\n    },\r\n    cardMedia: {\r\n        margin: 'auto'\r\n    },\r\n    cardContent: {\r\n        textAlign: 'center'\r\n    },\r\n    searchContainer: {\r\n        display: 'flex',\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        paddingLeft: \"20px\",\r\n        paddingRight: \"20px\",\r\n        marginTop: \"5px\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    searchIcon: {\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    searchInput: {\r\n        width: \"200px\",\r\n        margin: \"5px\",\r\n    },\r\n    appBarStyle: {\r\n        backgroundColor: theme.palette.type === \"dark\" ? theme.palette.background.paper : theme.palette.primary,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    darkModeIcon: {\r\n        color: '#fff'\r\n    },\r\n    loaderColor: {\r\n        color: theme.palette.type === \"dark\" ? '#fff' : theme.palette.primary\r\n    },\r\n    cardStyle: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.text.primary \r\n    }\r\n}));\r\n\r\nexport default useStyles;","import React from 'react';\r\nimport utils from './utils';\r\nimport {    \r\n    Grid,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,    \r\n    Typography,\r\n    CardActionArea,    \r\n} from '@material-ui/core';\r\nconst PokemonCard = (props)=>{       \r\n    const classes = props.classes\r\n    return(\r\n        <Grid item xs={12} sm={4}>\r\n                <CardActionArea>\r\n                    <Card onClick={() => props.history.push(`/${props.id}`)} className={classes.cardStyle}>\r\n                        <CardMedia\r\n                            image={props.sprite}\r\n                            className={classes.cardMedia}\r\n                            style={{ width: '130px', height: '130px' }}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                            <Typography>{`${props.id}. ${utils.toFirstCharUpperCase(props.name)}`}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardActionArea>\r\n            </Grid>\r\n    );\r\n}\r\nexport default PokemonCard;","import React, { useEffect, useState } from 'react';\r\nimport utils from './utils';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Grid,\r\n    CircularProgress,\r\n    IconButton,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,    \r\n    Typography,\r\n    CardActionArea,\r\n} from '@material-ui/core';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport axios from 'axios';\r\nimport Search from './Search';\r\nimport pokedexStyles from './Pokedex.styles';\r\nimport PokemonCard from './PokemonCard';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Pokedex = (props) => {\r\n    const classes = pokedexStyles();\r\n    const [pokemonData, setPokemonData] = useState(undefined);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const {history} = props;\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon?limit=30`)\r\n            .then(function (response) {\r\n                const { data } = response;\r\n                const { results } = data;\r\n                const newPokemonData = {};\r\n                results.forEach((pokemon, index) => {\r\n                    newPokemonData[index + 1] = {\r\n                        id: index + 1,\r\n                        name: pokemon.name,\r\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/${index + 1}.png`\r\n                    }\r\n                });\r\n                setPokemonData(newPokemonData);\r\n            });\r\n    }, []);\r\n\r\n    const handleSearchChange = (e) => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    const getPokemonCard = (pokemonId) => {\r\n        const { id, name, sprite } = pokemonData[pokemonId];\r\n        return (\r\n            <PokemonCard                \r\n                history={history}\r\n                classes={classes}\r\n                key={pokemonId}\r\n                id={id}\r\n                name={name}\r\n                sprite={sprite}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" className={classes.appBarStyle}>\r\n                <Toolbar>\r\n                    <Grid className={classes.toolbarContainer} container justify=\"space-between\" alignItems=\"center\" >\r\n                        <Grid item >\r\n                            <Search handleSearchChange={handleSearchChange} />\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <IconButton aria-label=\"mode\" className={classes.margin} onClick={props.themeModeHandler}>\r\n                                <Brightness6Icon className={classes.darkModeIcon} />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {pokemonData ? (\r\n                <Grid container spacing={2} className={classes.pokedexContainer}>\r\n                    {Object.keys(pokemonData).map(\r\n                        (pokemonId) => (\r\n                            pokemonData[pokemonId].name.includes(filter) &&\r\n                            getPokemonCard(pokemonId)\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            ) : (\r\n                    <Grid className={classes.loadingContainer} container justify={'center'} alignContent={'center'} direction={'column'} >\r\n                        <Grid item xs={12}>\r\n                            <CircularProgress className={classes.loaderColor} />\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default Pokedex;","import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Typography, Grid, Button, Link, Card, CardMedia, CardContent, CardActions, CardActionArea, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport utils from './utils';\r\nimport axios from 'axios';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    loadingContainer: {\r\n        minHeight: '100vh'\r\n    },\r\n    loaderColor: {\r\n        color: theme.palette.type === \"dark\" ? '#fff' : theme.palette.primary\r\n    },\r\n    pokedexContainer: {\r\n        paddingTop: '20px',\r\n        paddingBottom: '20px',\r\n        paddingLeft: '50px',\r\n        paddingRight: '50px',\r\n        maxWidth: '100%',\r\n        margin: '0'\r\n    },\r\n    cardStyle: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.text.primary\r\n    }\r\n}));\r\n\r\nconst Pokemon = (props) => {\r\n    const classes = styles();\r\n    const { match, history } = props;\r\n    const { params } = match;\r\n    const { pokemonId } = params;\r\n    const [pokemon, setPokemon] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n            .then(function (response) {\r\n                const { data } = response;\r\n                setPokemon(data);\r\n            })\r\n            .catch(function (error) {\r\n                setPokemon(false);\r\n            });\r\n    }, [pokemonId]);\r\n\r\n    const generateNotFound = () => {\r\n        return (\r\n            <>\r\n                <Typography>Pokemon not found</Typography>\r\n                <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n                    back to pokedex\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const generatePokemonJSX = (pokemon) => {\r\n        const { id, name, species, height, weight, types, sprites } = pokemon;\r\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n        const { front_default } = sprites;\r\n\r\n        return (\r\n            <>\r\n                <Grid container justify=\"center\" alignItems=\"center\" className={classes.pokedexContainer}>\r\n                    <Grid item xs={6}>\r\n                        <Card className={classes.cardStyle}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt={utils.toFirstCharUpperCase(name)}\r\n                                //height=\"300\"\r\n                                //width=\"300\"\r\n                                image={fullImageUrl}\r\n                                title={utils.toFirstCharUpperCase(name)}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {`${id}.`} {utils.toFirstCharUpperCase(name)}\r\n                                </Typography>\r\n                                <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n                                    <ListItem >\r\n                                        <ListItemText primary={`Height: ${height}`} />\r\n                                    </ListItem>\r\n                                    <ListItem >\r\n                                        <ListItemText primary={`Weight: ${weight}`} />\r\n                                    </ListItem>\r\n                                    <ListItem  >\r\n                                        <ListItemText >\r\n                                            {'Species: '}\r\n                                            <Link href={species.url} target=\"_blank\" rel=\"noopener\">{species.name} </Link>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem >\r\n                                        <ListItemText primary={`Types: `} />\r\n                                    </ListItem>\r\n                                    {types.map((typeInfo) => {\r\n                                        const { type } = typeInfo;\r\n                                        const { name } = type;\r\n                                        return <ListItem key={name}> <ListItemText inset primary={utils.toFirstCharUpperCase(name)} /></ListItem>;\r\n                                    })}\r\n                                </List>\r\n                            </CardContent>\r\n\r\n                            <CardActions>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n                                    back to pokedex\r\n                                </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pokemon === undefined &&\r\n                <Grid className={classes.loadingContainer} container xs={12} justify={'center'} alignContent={'center'} direction={'column'} >\r\n                    <CircularProgress className={classes.loaderColor} />\r\n                </Grid>}\r\n            {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n            {(pokemon === false) && (generateNotFound())}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pokemon;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst themes = {\r\n    darkTheme : createMuiTheme({\r\n        palette: {\r\n            type: 'dark',\r\n        },\r\n        overrides: {\r\n            MuiFormLabel: {\r\n                root: {\r\n                    \"&$focused\": {\r\n                        \"color\": '#CFCFCF'\r\n                    },\r\n                },\r\n            },\r\n            MuiInput: {\r\n                underline: {\r\n                    \"borderBottom\": '1px solid #CFCFCF',\r\n                    \"&:after\": {\r\n                        \"borderBottom\": '2px solid #CFCFCF',\r\n                    },\r\n                    '&:hover:not($disabled):before': {\r\n                        borderBottom: `2px solid #CFCFCF`,\r\n                        '@media (hover: none)': {\r\n                            borderBottom: `1px solid #CFCFCF`,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    }),\r\n    lightTheme : createMuiTheme({\r\n        palette: {\r\n            type: 'light',\r\n            background: {\r\n                paper: '#fafafa'\r\n            },\r\n        },\r\n        overrides: {\r\n            MuiFormLabel: {\r\n                root: {\r\n                    \"color\": '#CFCFCF',\r\n                    \"&$focused\": {\r\n                        \"color\": '#CFCFCF'\r\n                    },\r\n                },\r\n            },\r\n            MuiInput: {\r\n                underline: {\r\n                    \"borderBottom\": '1px solid #CFCFCF',\r\n                    \"&:after\": {\r\n                        \"borderBottom\": '2px solid #CFCFCF',\r\n                    },\r\n                    \"&:before\": {\r\n                        \"borderBottom\": '1px solid #CFCFCF',\r\n                    },\r\n                    '&:hover:not($disabled):before': {\r\n                        borderBottom: `2px solid #CFCFCF`,\r\n                        '@media (hover: none)': {\r\n                            borderBottom: `1px solid #CFCFCF`,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    })\r\n}\r\n\r\nexport default themes;\r\n\r\n","import React, { useState } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Pokedex from './Pokedex';\r\nimport Pokemon from './Pokemon';\r\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport themes from './themes';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  \r\n  const themeModeHandler = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n  const useStyles = makeStyles({\r\n    principalPaper: {\r\n      background: /*(theme.palette.type === \"dark\")*/darkMode ? '#303030' : '#bdbdbd',\r\n      minHeight: '100vh',\r\n      minWidth: '100%',\r\n      margin: '0',\r\n      padding: '0'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n    <ThemeProvider theme={darkMode ? themes.darkTheme : themes.lightTheme}>\r\n      <Paper square className={classes.principalPaper}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(props) => <Pokedex darkMode={darkMode} themeModeHandler={themeModeHandler} {...props} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/:pokemonId\"\r\n            render={(props) => <Pokemon {...props} />}\r\n          />\r\n          <Route render={(props) => <div>Not found</div>}/>\r\n            \r\n        </Switch>\r\n      </Paper>\r\n    </ThemeProvider>\r\n    </HashRouter>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createBrowserHistory } from \"history\";\r\nimport App from './App';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}